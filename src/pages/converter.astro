---
import Input from "@/components/starwind/input";
import Button from "@/components/starwind/button";
import Layout from "@/layouts/Layout.astro";
---

<Layout>
  <section class="flex flex-col items-center justify-center min-h-screen px-6 text-center bg-gradient-to-b from-white to-orange-50">
    <h1 class="text-5xl md:text-6xl font-extrabold mb-4 text-gray-900 drop-shadow-md">
      Preview Your Figma File
    </h1>
    <p class="text-gray-700 mb-8 max-w-xl text-center">
      Paste a Figma file URL below to see a live preview and generate ready-to-use Astro components instantly.
    </p>

    <form id="figmaForm" class="flex flex-col sm:flex-row gap-4 items-center justify-center w-full max-w-2xl mb-8">
      <Input
        type="url"
        name="figmaURL"
        id="figmaURL"
        placeholder="Paste your Figma file URL"
        required
        class="flex-1 px-4 py-3 rounded-lg border border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-400"
      />
      <Button
        type="submit"
        class="bg-orange-500 hover:bg-orange-600 text-white font-semibold py-3 px-6 rounded-lg transition-all duration-200 shadow-md transform hover:scale-105"
      >
        Preview
      </Button>
    </form>

    <div id="previewContainer" class="w-full max-w-4xl text-left"></div>
  </section>

  <script is:inline>
    const form = document.getElementById("figmaForm");
    const previewContainer = document.getElementById("previewContainer");

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const url = document.getElementById("figmaURL").value.trim();
      previewContainer.innerHTML = "<p class='text-gray-500'>Loading preview...</p>";

      if (!url) {
        previewContainer.innerHTML = '<p class="text-red-500">Please enter a Figma file URL.</p>';
        return;
      }

      try {
        const formData = new FormData();
        formData.append("figmaURL", url);

        const res = await fetch("/api/convert", { method: "POST", body: formData });
        const data = await res.json();

        if (!res.ok) {
          previewContainer.innerHTML = `<p class="text-red-500">${data.message || "Invalid Figma URL"}</p>`;
          return;
        }

        previewContainer.innerHTML = `
          <div class="mb-6 p-4 bg-white rounded-lg shadow">
            <p><strong>Total Frames:</strong> ${data.totalFrames}</p>
            <p><strong>Frames with Text (Sections):</strong> ${data.totalSections}</p>
          </div>
          <iframe
            src="${data.embedUrl}"
            class="w-full h-96 border border-gray-200 rounded-lg shadow mb-6"
            allowfullscreen
          ></iframe>
          <div id="sectionsContainer" class="grid gap-6"></div>
        `;

        const sectionsContainer = document.getElementById("sectionsContainer");

        data.sections.forEach(section => {
          const sectionEl = document.createElement("div");
          const codeEscaped = section.code.replace(/</g, "&lt;").replace(/>/g, "&gt;");

          sectionEl.innerHTML = `
            <div class="p-4 border rounded-lg shadow-sm bg-white">
              <h3 class="text-xl font-semibold mb-2">${section.component}.astro</h3>
              <pre class="bg-gray-100 p-3 rounded mb-4 overflow-x-auto">${codeEscaped}</pre>
              <button class="bg-orange-500 hover:bg-orange-600 text-white py-2 px-4 rounded copyButton transition-colors duration-200">
                Copy to clipboard
              </button>
            </div>
          `;
          sectionsContainer.appendChild(sectionEl);
        });

        sectionsContainer.querySelectorAll(".copyButton").forEach(btn => {
          btn.addEventListener("click", () => {
            const pre = btn.previousElementSibling;
            if (pre) {
              const code = pre.textContent.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
              navigator.clipboard.writeText(code);
              btn.textContent = "Copied!";
              setTimeout(() => btn.textContent = "Copy to clipboard", 1500);
            }
          });
        });

      } catch (err) {
        previewContainer.innerHTML = `<p class="text-red-500">Error: ${err.message}</p>`;
      }
    });
  </script>
</Layout>
